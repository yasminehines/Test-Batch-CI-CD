name: CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  # test-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run a one-line script
  #       run: echo "Hello, world!"
  
  check-UnixScripts:
    runs-on: ubuntu-latest
    steps:
    - name: Check Unix Scripts Directory
      id: CheckUnixScripts
      # working-directory: ./UnixScripts
      run: |
        cd ./UnixScripts
        pwd
  
  # overwrite-files-part-1:
  #   needs: check-UnixScripts
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Overwrite Files & Directories
  #       id: OverwriteFiles1
  #       if: steps.CheckUnixScripts.outputs.num == 1
  #       run: |
  #         cd ./UnixScripts
  #         git config --global user.email "yasmine.hines@aa.com"
  #         git config --global user.name "yasminehines"
  #         git mv *.ksh /home/runner/work/Test-Batch-CI-CD/Test-Batch-CI-CD/Backup
  #         cd ..
  #         git add ./Backup/
  #         git commit -m "add files to Backup"
  #         git push
  
  # overwrite-files-part-2:
  #   needs: overwrite-files-part-1
  #   runs-on: ubuntu-latest
  #   steps:            
  #     - name: Overwrite Files & Directories Part 2
  #       id: OverwriteFiles2
  #       run: |
  #         cd ./Backup
  #         ls -R
  #         echo "Files and Directories overwritten/moved."
  #         echo '::set-output name=num::0'
  
  # extract-artifacts:
  #   # needs: overwrite-files-part-2
  #   needs: check-UnixScripts
  #   runs-on: ubuntu-latest
  #   steps:
  #     # extract artifacts from dev
  #     - name: Extracts Artifacts
  #       if: steps.CheckUnixScripts.outputs.num == 0 || steps.OverwriteFiles2.outputs.num == 0
  #       # run: |
  #       #   echo "Extracting artifacts from dev" 
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: my-artifact
  #       # path of artifacts from dev
  #         path: ./artifacts
  #         if-no-files-found: warn